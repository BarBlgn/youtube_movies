{"version":3,"sources":["logo.svg","serviceWorker.js","components/movieComponents/SearchMovie.js","config/Config.js","components/Search.js","components/movieComponents/Player.js","components/Header.js","components/sliderComponents/Slide.js","components/Slider.js","components/movieComponents/Movie.js","components/movieComponents/Movies.js","components/Spotlight.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","movie","props","Col","md","className","src","ImageUrl","Name","color","icon","All","Point","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Search","getSearchResult","bind","state","movies","e","this","setState","target","value","database","ref","on","snapshot","val","newState","push","id","name","imageUrl","point","searchValue","list","result","length","filter","m","toLowerCase","includes","map","type","onChange","React","Component","Player","close","YoutubeCode","code","onClick","width","height","frameborder","allow","allowfullscreen","header","Container","slide","slider","sliderImageUrl","onSlider","fluid","Row","Slide","imdbSpan","description","col","Type","Description","alt","effect","Movies","nextPage","previousPage","openMovie","youtubeCode","currentPage","movieList","OrderBy","orderBy","sort","a","b","viewed","startItem","sliceTo","player","slice","Movie","SpotLight","Tabs","defaultActiveKey","Tab","eventKey","title","class","ReactDOM","render","StrictMode","Header","Slider","Spotlight","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d72aeaad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as All from '@fortawesome/free-solid-svg-icons';\n\nconst movie = (props) => {\n    return (\n        <Col md={12} className={'search-movie'}>\n            <div className={'movie-poster col-md-3'}>\n                <img src={ props.ImageUrl } className={'image-full'} />\n            </div>\n            <h6>{ props.Name }</h6>\n            <span className={'imdb'}><FontAwesomeIcon color={'#ffc000'} icon={All.faStar} />{ props.Point }</span>\n        </Col>\n    )\n}\n\nexport default movie;","import firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyBleEH-AgEIyNbnMeacUynYGgTDM484vCg\",\n    authDomain: \"reactfilm-24746.firebaseapp.com\",\n    databaseURL: \"https://reactfilm-24746.firebaseio.com\",\n    projectId: \"reactfilm-24746\",\n    storageBucket: \"reactfilm-24746.appspot.com\",\n    messagingSenderId: \"1072640784024\",\n    appId: \"1:1072640784024:web:92f8169555c0843cb202ed\",\n    measurementId: \"G-FJ2BNN1R8R\"\n  };\n\n  firebase.initializeApp(config);\n  export default firebase;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as All from '@fortawesome/free-solid-svg-icons';\nimport Movie from './movieComponents/SearchMovie';\nimport firebase from '../config/Config';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.getSearchResult = this.getSearchResult.bind(this);\n\n        this.state = {\n            movies: []\n        };\n    }\n    \n    getSearchResult(e) {\n        this.setState({\"searchValue\" : e.target.value});\n    }\n\n    componentDidMount() {\n        const moviesRef = firebase.database().ref(\"movies\");\n        moviesRef.on(\"value\", (snapshot) => {\n            let movies = snapshot.val();\n            let newState = [];\n            for (let movie in movies) {\n                newState.push({\n                    id: movie,\n                    name: movies[movie].name,\n                    imageUrl: movies[movie].imageUrl,\n                    point: movies[movie].point,\n                });\n            }\n            this.setState({ movies: newState });\n        });\n    }\n\n    render() {\n        const value = this.state.searchValue;\n        var list = this.state.movies; \n        var result = \"\";\n\n        if (value != null && value.length > 2) {\n            list = this.state.movies.filter(m => m.name.toLowerCase().includes(value.toLowerCase()));\n\n            result =  <div id=\"search-result\">\n                            {\n                                list.map((movie) => \n                                    <Movie Name={movie.name} ImageUrl={movie.imageUrl} Point={movie.point} />\n                                )\n                            }\n                        </div>\n        }\n\n        return (\n            <div className={'search-input col-md-6 left'}>\n                <input type=\"text\" onChange={this.getSearchResult} id=\"search\" />\n                {result}\n            </div>\n        )\n    }\n}\n\nexport default Search;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as All from '@fortawesome/free-solid-svg-icons';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nclass Player extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            close: false\n        };\n\n        this.close = this.close.bind(this);\n    }\n\n    close() {\n        this.setState({\"close\": true}); \n    }\n\n    render() {\n        if (this.state.close) {\n            return ( <div></div> )\n        }\n\n        if (this.props.YoutubeCode != \"\")\n        {\n            let code = \"https://www.youtube.com/embed/\" + this.props.YoutubeCode;\n            return (\n                <div id=\"player\">\n                    <div onClick={this.close}><FontAwesomeIcon color={'#ffc000'} icon={All.faTimesCircle} /></div>\n                    <iframe width=\"800\" height=\"600\" src={code} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                </div>\n            )\n        } else {\n            return (\n                <div></div>\n            )\n        }\n    }\n}\n\nexport default Player;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './Layout.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as All from '@fortawesome/free-solid-svg-icons';\nimport Search from './Search';\nimport Player from './movieComponents/Player';\n\nconst header = (props) => {\n    return (\n        <header>\n            <Container>\n                <nav>\n                    <Col id=\"logo-menu\" md={3} className={'left'}>\n                        <FontAwesomeIcon icon={ All.faAlignJustify } />\n                        <img src={'../images/logo.png'} className={'img-fluid logo'} />\n                    </Col>\n                    <Col md={6} className={'left'}>\n                        <div id=\"search-form\">\n                            <div className={ 'search-text left col-md-4' }>Film Bul</div>\n                            <Search />\n                            <div className={'search-icon left col-md-2'}>\n                                <FontAwesomeIcon icon={ All.faSearch } />\n                            </div>\n                        </div>\n                    </Col>\n                </nav>\n            </Container>\n        </header>\n    )\n} \nexport default header;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as All from '@fortawesome/free-solid-svg-icons';\n\nconst slide = (props) => {\n    return (\n        <Col className={'slide'}>\n            <div className={'movie-poster'}>\n                <img src={ props.ImageUrl } className={'img-full'} />\n            </div>\n            <div className={'movie-info'}>\n                <span className={'imdb'}><FontAwesomeIcon color={'#ffc000'} icon={All.faStar} />{ props.Point }</span>\n                <h3>{ props.Name }</h3>\n            </div>\n        </Col>\n    )\n}\n\nexport default slide;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as All from '@fortawesome/free-solid-svg-icons';\nimport Slide from './sliderComponents/Slide';\nimport firebase from '../config/Config';\n\nclass slider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movies: []\n        };\n    }\n\n    componentDidMount() {\n        const moviesRef = firebase.database().ref(\"movies\");\n        moviesRef.on(\"value\", (snapshot) => {\n            let movies = snapshot.val();\n            let newState = [];\n            for (let movie in movies) {\n                newState.push({\n                    id: movie,\n                    name: movies[movie].name,\n                    imageUrl: movies[movie].imageUrl,\n                    point: movies[movie].point,\n                    sliderImageUrl: movies[movie].sliderImageUrl,\n                    onSlider: movies[movie].onSlider\n                });\n            }\n            this.setState({ movies: newState });\n        });\n    }\n\n    render() {\n        return (\n            <section id=\"slider\">\n                <Container fluid={true}>\n                    <Row className={'row-cols-5'}>\n                        {\n                            this.state.movies.filter(movie => movie.onSlider && movie.sliderImageUrl != \"\").map((movie) => \n                                <Slide Name={movie.name} ImageUrl={movie.sliderImageUrl} Point={movie.point} />\n                            )\n                        }\n                    </Row>\n                </Container>\n            </section>\n        )\n    }\n}\n\nexport default slider;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as All from '@fortawesome/free-solid-svg-icons';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nclass movie extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        var imdbSpan = \"\";\n        var description = \"\";\n        var col = this.props.Type == \"serie\" ? 4 : 3;\n\n        if (this.props.Type == \"theater\") {\n            description = <span className={'description'}>{this.props.Description}</span>\n        } else {\n            imdbSpan = <span className={'imdb mbs mtm'}><FontAwesomeIcon color={'#ffc000'} icon={All.faStar} /> { this.props.Point }</span>\n        }\n\n        return (\n            <Col md={col} className={'left'}>\n                <div className={'movie-poster'}>\n                    <LazyLoadImage\n                        alt={this.props.YoutubeCode}\n                        className={'image-full'}\n                        effect=\"blur\"\n                        src={this.props.ImageUrl} // use normal <img> attributes as props\n                        width=\"100%\" />\n                </div>\n                {imdbSpan}\n                <h5>{ this.props.Name }</h5>\n                {description}\n            </Col>\n        )\n    }\n}\n\nexport default movie;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as All from '@fortawesome/free-solid-svg-icons';\nimport Movie from './Movie';\nimport firebase from '../../config/Config';\nimport Player from './Player';\n\nclass Movies extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.nextPage = this.nextPage.bind(this);\n        this.previousPage = this.previousPage.bind(this);\n        this.openMovie = this.openMovie.bind(this);\n\n        this.state = {\n            movies: [],\n            youtubeCode: \"\"\n        };\n    }\n\n    openMovie(youtubeCode) {\n        this.setState({\"youtubeCode\": youtubeCode});\n    }\n\n    nextPage () {\n        this.setState({\"currentPage\": this.state.currentPage + 1});\n    }\n\n    previousPage() {\n        if (this.state.currentPage != 1) {\n            this.setState({\"currentPage\": this.state.currentPage - 1});   \n        }\n    }\n\n    componentDidMount() {\n        const moviesRef = firebase.database().ref(\"movies\");\n        moviesRef.on(\"value\", (snapshot) => {\n            let movies = snapshot.val();\n            let newState = [];\n            for (let movie in movies) {\n                newState.push({\n                    id: movie,\n                    name: movies[movie].name,\n                    imageUrl: movies[movie].imageUrl,\n                    point: movies[movie].point,\n                    sliderImageUrl: movies[movie].sliderImageUrl,\n                    onSlider: movies[movie].onSlider,\n                    type: movies[movie].type,\n                    description: movies[movie].description,\n                    youtubeCode: movies[movie].youtubeCode\n                });\n            }\n            this.setState({ movies: newState });\n        });\n    }\n\n    render() {\n        if (!this.state.currentPage) {\n            this.setState({\"currentPage\": 1});\n        }\n        var movieList = this.state.movies;\n\n        if (this.props.OrderBy != this.state.orderBy) {\n            this.setState({ \"currentPage\": this.state.currentPage + 1, \"orderBy\": this.props.OrderBy });\n        }\n\n        if (this.props.OrderBy == \"point\")\n        {\n            movieList = this.state.movies.sort(function(a, b){ \n                return b.point - a.point;\n            });\n        }\n        else if (this.props.OrderBy == \"viewed\") {\n            movieList = this.state.movies.sort(function(a, b){\n                return b.viewed - a.viewed;\n            });\n        }\n\n        var startItem = this.props.Type == \"serie\" ?  (this.state.currentPage - 1) * 3 : (this.state.currentPage - 1) * 4;\n\n        if (this.props.Type == \"theater\") {\n            movieList = this.state.movies.filter(movie => movie.type == 2);\n        }\n\n        if  (this.props.Type == \"serie\") {\n            movieList = this.state.movies.filter(movie => movie.type == 1);\n        }\n\n        var sliceTo = this.props.Type == \"serie\" ? startItem + 3 : startItem + 4;\n        var player = \"\";\n\n        if (this.state.youtubeCode && this.state.youtubeCode != \"\") {\n            player = <Player YoutubeCode={this.state.youtubeCode} />\n        }\n        return (\n            <div className={'movies'}>\n                {player}\n                <img className={'arrow arrow-left'} src={'../images/arrow-left.png'} onClick={this.previousPage} />\n                <img className={'arrow arrow-right'} src={'../images/arrow-right.png'}  onClick={this.nextPage} />\n                {\n                    movieList.slice(startItem, sliceTo).map((movie) => \n                        <div onClick={() => this.openMovie(movie.youtubeCode)}>\n                            <Movie Name={movie.name} YoutubeCode={movie.youtubeCode} ImageUrl={movie.imageUrl} Point={movie.point} Type={this.props.Type} Description={movie.description} />\n                        </div>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default Movies;","import React from 'react';\nimport { Container, Row, Col, Tabs, Tab } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as All from '@fortawesome/free-solid-svg-icons';\nimport Movies from './movieComponents/Movies';\nimport Movie from './movieComponents/Movie';\n\nclass SpotLight extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <section id=\"spotlight\">\n                <Container>\n                    <h3><FontAwesomeIcon color={'#dd3333'} icon={All.faBullhorn} /> Filmler</h3>\n                    <nav>\n                        <Tabs defaultActiveKey=\"news\" id=\"movies-list\">\n                            <Tab eventKey=\"news\" title=\"En Yeniler\">\n                                    <Movies OrderBy=\"date\" />\n                            </Tab>\n                            <Tab eventKey=\"most-viewed\" title=\"Çok İzlenenler\">\n                                    <Movies OrderBy=\"viewed\" />\n                            </Tab>\n                            <Tab eventKey=\"high-points\" title=\"Yüksek Puanlılar\">\n                                    <Movies OrderBy=\"point\" />\n                            </Tab>\n                        </Tabs>\n                    </nav>\n\n                    <h3 class=\"mtl\"><FontAwesomeIcon color={'#dd3333'} icon={All.faBullhorn} /> Diziler</h3>\n                    <nav>\n                        <Tabs defaultActiveKey=\"news\" id=\"movies-list\">\n                            <Tab eventKey=\"news\" title=\"En Yeniler\">\n                                    <Movies Type=\"serie\" OrderBy=\"date\" />\n                            </Tab>\n                            <Tab eventKey=\"most-viewed\" title=\"Çok İzlenenler\">\n                                    <Movies Type=\"serie\" OrderBy=\"viewed\" />\n                            </Tab>\n                            <Tab eventKey=\"high-points\" title=\"Yüksek Puanlılar\">\n                                    <Movies Type=\"serie\" OrderBy=\"point\" />\n                            </Tab>\n                        </Tabs>\n                    </nav>\n\n                    <h3 class=\"mtl\"><FontAwesomeIcon color={'#dd3333'} icon={All.faEye} /> Tiyatrolar</h3>\n                    <nav>\n                        <Tabs defaultActiveKey=\"news\" id=\"movies-list\">\n                            <Tab eventKey=\"news\" title=\"En Yeniler\">\n                                    <Movies Type=\"theater\" OrderBy=\"date\" />\n                            </Tab>\n                            <Tab eventKey=\"most-viewed\" title=\"Çok İzlenenler\">\n                                    <Movies Type=\"theater\" OrderBy=\"viewed\" />\n                            </Tab>\n                            <Tab eventKey=\"high-points\" title=\"Yüksek Puanlılar\">\n                                    <Movies Type=\"theater\" OrderBy=\"point\" />\n                            </Tab>\n                        </Tabs>\n                    </nav>\n                </Container>\n            </section>\n        )\n    }\n}\n\n/*\nconst spotlight = (props) => {\n    return (\n        <section id=\"spotlight\">\n            <Container>\n                <h3><FontAwesomeIcon color={'#dd3333'} icon={All.faBullhorn} /> Öne Çıkanlar</h3>\n                <nav>\n                    <a className={'selected'} href=\"#\">En Yeniler</a>\n                    <a onClick={this.getMostRecent} href=\"#\">Çok İzlenenler</a>\n                    <a href=\"#\">Yüksek Puanlılar</a>\n                </nav>\n\n                <div className={'movies'}>\n                    <Movie Name=\"Neredesin Firuze\" ImageUrl=\"../images/neredesin-firuze.jpg\" Point=\"7.3\" />\n                    <Movie Name=\"Hemşo\" ImageUrl=\"../images/hemso.jpg\" Point=\"4.8\" />\n                    <Movie Name=\"Mucize\" ImageUrl=\"../images/mucize.jpg\" Point=\"7.6\" />\n                    <Movie Name=\"Bana Bir Soygun Yaz\" ImageUrl=\"../images/bana-bir-soygun-yaz.jpg\" Point=\"4.7\" />\n                </div>\n            </Container>\n        </section>\n    )\n}\n*/\nexport default SpotLight;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Header from './components/Header';\nimport Slider from './components/Slider';\nimport Spotlight from './components/Spotlight';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <Slider />\n    <Spotlight />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}